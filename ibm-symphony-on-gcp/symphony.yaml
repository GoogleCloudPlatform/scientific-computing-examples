# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

blueprint_name: ibm-symphony

vars:
  project_id:  ## Set project id here
  deployment_name: symphony1
  region: us-central1
  zone: us-central1-a
  base_image:
    family: hpc-rocky-linux-8 
    project: cloud-hpc-image-public 
  new_image:
    family: $(vars.deployment_name)
    project: $(vars.project_id)
  disk_size_gb: 200
  metadata: # Workaround for https://github.com/GoogleCloudPlatform/cluster-toolkit/discussions/3243
    VmDnsSetting: GlobalOnly
  sym_installer: sym-7.3.2.0_x86_64.bin
  sym_source_bucket: mybucket_jrt
  sym_fixpack: sym-7.3.2.0_x86_64_build601711.tar.gz
  sym_entitlement: sym_adv_entitlement.dat
  symphony_install_dir: /opt/ibm/symphony
  admin_password: admin
  service_account_email: 658302879205-compute@developer.gserviceaccount.com
  pubsub_subscription: hf-gce-vm-events-sub
  pubsub_topic: hf-gce-vm-events
  sink_name: hf-gce-vm-events-sink

deployment_groups:
- group: primary
  modules:
  - id: network
    source: modules/network/vpc

  - id: topic
    source: ./modules/pubsub_topic
    settings:
      topic_name: $(vars.pubsub_topic)
  - id: subscription
    source: ./modules/pubsub_subscription
    use:
    - topic
    settings:
      subscription_name: $(vars.pubsub_subscription)
  - id: sink
    source: ./modules/logging_sink
    use:
    - topic
    - subscription
    settings:
      sink_name: $(vars.sink_name)
      log_filter: |
        logName="projects/$(vars.project_id)/logs/cloudaudit.googleapis.com%2Factivity" 
        resource.type=("gce_instance_group_manager" OR "gce_instance" ) 
        protoPayload.methodName=( 
          "v1.compute.instanceGroupManagers.createInstances" 
          OR "v1.compute.instanceGroupManagers.deleteInstances" 
          OR "v1.compute.instances.delete" 
        )

  - id: script
    source: modules/scripts/startup-script
    settings:
      install_cloud_ops_agent: true
      runners:
      - type: data
        destination: /tmp/Symphony/hostProviderPlugins.json
        source:  $(ghpc_stage("resources/hostProviderPlugins.json"))
      - type: data
        destination: /tmp/Symphony/hostProviders.json
        source:  $(ghpc_stage("resources/hostProviders.json"))
      - type: data
        destination: /tmp/Symphony/hostRequestors.json
        source:  $(ghpc_stage("resources/hostRequestors.json"))
      - type: shell
        destination: install_symphony.sh
        source:  $(ghpc_stage("scripts/install_symphony.sh"))
        args: $(vars.sym_installer) $(vars.sym_fixpack) $(vars.sym_entitlement) $(vars.symphony_install_dir) $(vars.sym_source_bucket)
      - type: shell
        destination: hf-gce_symphony.sh
        source:  $(ghpc_stage("scripts/hf-gce_symphony.sh"))
        args: $(vars.symphony_install_dir) $(vars.project_id)
  - id: sym-compute-script
    source: modules/scripts/startup-script
    settings:
      install_cloud_ops_agent: true
      runners:
      - type: shell
        destination: sym_compute.sh
        source:  $(ghpc_stage("scripts/sym_compute.sh"))
        args: $(vars.deployment_name)-master-0 $(vars.symphony_install_dir)

- group: packer
  modules:
  - id: custom-image
    source: modules/packer/custom-image
    kind: packer
    use:
    - network
    - script
    settings:
      # give VM a public IP to ensure startup script can reach public internet
      # w/o new VPC
      omit_external_ip: false
      source_image_family: $(vars.base_image.family)
      source_image_project_id: [$(vars.base_image.project)]
      disk_size: $(vars.disk_size_gb)
      disk_type: pd-ssd
      image_family: $(vars.new_image.family)
      # building this image does not require a GPU-enabled VM
      machine_type: c2-standard-4
      state_timeout: 15m

- group: create-mig
  modules:

  ## Create MIG instance templates
  - id: sym-mig-c2-30
    use: 
    - network
    - sym-compute-script
    source: ./modules/instance_template
    settings:
      service_account_email: $(vars.service_account_email)
      source_image_family: $(vars.new_image.family)
      source_image_project: $(vars.new_image.project)
      name_prefix: $(vars.deployment_name)
      machine_type: c2-standard-30
      advanced_machine_features:
        threads_per_core: null # Use platform default value

  - id: sym-mig-c2-4
    use: 
    - network
    - sym-compute-script
    source: ./modules/instance_template
    settings:
      source_image_family: $(vars.new_image.family)
      source_image_project: $(vars.new_image.project)
      name_prefix: $(vars.deployment_name)
      machine_type: c2-standard-4
      advanced_machine_features:
        threads_per_core: null # Use platform default value

  ## Create MIGs
  - id: sym-mig-4
    source: community/modules/compute/mig
    settings:
      name: sym-mig-c2-4
      versions:
      - name: sym-mig-c2-4
        instance_template: $(sym-mig-c2-4.self_link)

  - id: sym-mig-30
    source: community/modules/compute/mig
    settings:
      name: sym-mig-c2-30
      versions:
      - name: sym-mig-c2-30
        instance_template: $(sym-mig-c2-30.self_link)

- group: deploy-vms
  modules:
  - id: sym-master-script
    source: modules/scripts/startup-script
    settings:
      install_cloud_ops_agent: true
      runners:
      - type: data
        destination: /etc/google-cloud-ops-agent/config.yaml
        source:  $(ghpc_stage("resources/google-ops-agent-config.yaml"))
      - type: data
        destination: /tmp/sym_mig_provider.py
        source:  $(ghpc_stage("resources/sym_mig_provider.py"))
      - type: shell
        destination: hostfactoryconf_json.sh
        source:  $(ghpc_stage("scripts/hostfactoryconf_json.sh"))
        args: $(vars.symphony_install_dir)
      - type: shell
        destination: gcpgceinstprov_config_json.sh
        source:  $(ghpc_stage("scripts/gcpgceinstprov_config_json.sh"))
        args: $(vars.symphony_install_dir) $(vars.project_id) $(vars.pubsub_topic) $(vars.pubsub_subscription)

      - type: shell
        destination: sym_master.sh
        source:  $(ghpc_stage("scripts/sym_master.sh"))
        args: $(vars.deployment_name)-master-0 $(vars.symphony_install_dir) $(vars.admin_password) $(vars.project_id) $(vars.pubsub_subscription)
      - type: shell
        destination: gcpgceinstprov_templates_json.sh
        source:  $(ghpc_stage("scripts/gcpgceinstprov_templates_json.sh"))
        args: $(vars.symphony_install_dir) "sym-mig-c2-4,10,X86_64,4,4,32768,$(vars.zone),sym-mig-c2-4__sym-mig-c2-30,10,X86_64,30,30,122880,$(vars.zone),sym-mig-c2-30"
        #args: $(vars.symphony_install_dir) "sym-mig-c2-4,10,X86_64,4,4,32768,$(vars.zone),sym-mig-c2-4"

  - id: sym-master-vm
    source: modules/compute/vm-instance
    use: 
    - sym-master-script
    - network
    settings:
      name_prefix: $(vars.deployment_name)-master
      machine_type: c2-standard-4
      instance_image: $(vars.new_image)

  - id: sym-compute-vm
    source: modules/compute/vm-instance
    use: 
    - sym-compute-script
    - network
    settings:
      name_prefix: $(vars.deployment_name)-compute
      machine_type: c2-standard-4
      instance_image: $(vars.new_image)
      instance_count: 1
